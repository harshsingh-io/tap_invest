// Mocks generated by Mockito 5.4.6 from annotations
// in tap_invest/test/presentation/cubit/bond_list_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tap_invest/data/models/bond_detail_model.dart' as _i2;
import 'package:tap_invest/data/models/bond_summary_model.dart' as _i5;
import 'package:tap_invest/data/repository/bond_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBondDetail_0 extends _i1.SmartFake implements _i2.BondDetail {
  _FakeBondDetail_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BondRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBondRepository extends _i1.Mock implements _i3.BondRepository {
  MockBondRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.BondSummary>> getBonds() =>
      (super.noSuchMethod(
            Invocation.method(#getBonds, []),
            returnValue: _i4.Future<List<_i5.BondSummary>>.value(
              <_i5.BondSummary>[],
            ),
          )
          as _i4.Future<List<_i5.BondSummary>>);

  @override
  _i4.Future<_i2.BondDetail> getBondDetail(String? isin) =>
      (super.noSuchMethod(
            Invocation.method(#getBondDetail, [isin]),
            returnValue: _i4.Future<_i2.BondDetail>.value(
              _FakeBondDetail_0(
                this,
                Invocation.method(#getBondDetail, [isin]),
              ),
            ),
          )
          as _i4.Future<_i2.BondDetail>);
}
